@model PagedList.IPagedList<ShoppingList.Models.ShoppingItemIndex>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "ListItems", FormMethod.Get))

{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}


<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Content", "Index", new { sortOrder = ViewBag.ItemSortParm})
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Contents)
        </th>*@
        <th>
            @Html.ActionLink("Priority", "Index", new { sortOrder = ViewBag.PriorityPram })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Priority)
        </th>*@
        <th>
            Note
        </th>
        <th>
            IsChecked
        </th>
       
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
       
        @if (item.IsChecked == false)
        {
                <td> @Html.DisplayFor(modelItem => item.Contents) </td>
        }
        else
        {
            <td><strike>@Html.DisplayFor(modelItem => item.Contents)</strike></td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.Priority)
        </td>
        @if (item.IsChecked == false)
        {
                <td> @Html.DisplayFor(modelItem => item.Note) </td>
        }
        else
        {
            <td><strike>@Html.DisplayFor(modelItem => item.Note)</strike></td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.IsChecked, new { Id = item.ShoppingListItemID })
        </td>
        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ShoppingListItemID }) |
            @*@Html.ActionLink("Details", "Details", new { id=item.ShoppingListItemID }) |*@
            @Html.ActionLink("Delete", "Delete", new { id=item.ShoppingListItemID })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section scripts {
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $("i[data-toggle='star']")
                .css({ "cursor": "pointer" })
                .click(function (e) {
                    var target = $(e.target);
                    var itemId = target.attr("data-id");
                    var checkSet = target.hasClass("glyphicon-check");

                   $.ajax({
                        method: checkSet ? "DELETE" : "PUT",
                        url: "/api/note/" + itemId + "/star",
                        data: null
                    })
                    .done(function (r) {
                        target.removeClass();
                        target.addClass("glyphicon " + (checkSet ? "glyphicon-unchecked" : "glyphicon-check"));
                    })
                    .fail(function (r) {
                        alert("Failed to change check status");
                    });
                });
        });
    </script>
}